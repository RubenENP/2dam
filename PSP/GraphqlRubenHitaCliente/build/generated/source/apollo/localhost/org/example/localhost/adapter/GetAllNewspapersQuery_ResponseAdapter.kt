//
// AUTO-GENERATED FILE. DO NOT MODIFY.
//
// This class was automatically generated by Apollo GraphQL version '3.7.3'.
//
package org.example.localhost.adapter

import com.apollographql.apollo3.api.Adapter
import com.apollographql.apollo3.api.CustomScalarAdapters
import com.apollographql.apollo3.api.NullableStringAdapter
import com.apollographql.apollo3.api.StringAdapter
import com.apollographql.apollo3.api.json.JsonReader
import com.apollographql.apollo3.api.json.JsonWriter
import com.apollographql.apollo3.api.list
import com.apollographql.apollo3.api.nullable
import com.apollographql.apollo3.api.obj
import kotlin.String
import kotlin.Unit
import kotlin.collections.List
import org.example.localhost.GetAllNewspapersQuery

public object GetAllNewspapersQuery_ResponseAdapter {
  public object Data : Adapter<GetAllNewspapersQuery.Data> {
    public val RESPONSE_NAMES: List<String> = listOf("getAllNewspapers")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        GetAllNewspapersQuery.Data {
      var _getAllNewspapers: List<GetAllNewspapersQuery.GetAllNewspaper?>? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _getAllNewspapers = GetAllNewspaper.obj().nullable().list().nullable().fromJson(reader,
              customScalarAdapters)
          else -> break
        }
      }

      return GetAllNewspapersQuery.Data(
        getAllNewspapers = _getAllNewspapers
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: GetAllNewspapersQuery.Data,
    ): Unit {
      writer.name("getAllNewspapers")
      GetAllNewspaper.obj().nullable().list().nullable().toJson(writer, customScalarAdapters,
          value.getAllNewspapers)
    }
  }

  public object GetAllNewspaper : Adapter<GetAllNewspapersQuery.GetAllNewspaper> {
    public val RESPONSE_NAMES: List<String> = listOf("id", "nameNewspaper", "releaseDate")

    public override fun fromJson(reader: JsonReader, customScalarAdapters: CustomScalarAdapters):
        GetAllNewspapersQuery.GetAllNewspaper {
      var _id: String? = null
      var _nameNewspaper: String? = null
      var _releaseDate: String? = null

      while(true) {
        when (reader.selectName(RESPONSE_NAMES)) {
          0 -> _id = NullableStringAdapter.fromJson(reader, customScalarAdapters)
          1 -> _nameNewspaper = StringAdapter.fromJson(reader, customScalarAdapters)
          2 -> _releaseDate = StringAdapter.fromJson(reader, customScalarAdapters)
          else -> break
        }
      }

      return GetAllNewspapersQuery.GetAllNewspaper(
        id = _id,
        nameNewspaper = _nameNewspaper!!,
        releaseDate = _releaseDate!!
      )
    }

    public override fun toJson(
      writer: JsonWriter,
      customScalarAdapters: CustomScalarAdapters,
      `value`: GetAllNewspapersQuery.GetAllNewspaper,
    ): Unit {
      writer.name("id")
      NullableStringAdapter.toJson(writer, customScalarAdapters, value.id)

      writer.name("nameNewspaper")
      StringAdapter.toJson(writer, customScalarAdapters, value.nameNewspaper)

      writer.name("releaseDate")
      StringAdapter.toJson(writer, customScalarAdapters, value.releaseDate)
    }
  }
}
